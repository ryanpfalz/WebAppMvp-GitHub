name: Azure Terraform Deployment

on:
  push:
    branches:
      - main

env:
  environment: ${{ github.event.inputs.environment }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # https://www.mikaelkrief.com/terraform-remote-backend-azure/ - env state stored by container
      - name: Set Terraform Backend Configuration
        run: |
          az configure --defaults group=${{ env.tfBackendRg }} location=${{ env.tfBackendRegion }}
          az storage account create --name ${{ env.tfBackendStorageAccount }} --sku Standard_LRS --encryption-services blob
          tfBackendStorageKey=$(az storage account keys list --account-name ${{ env.tfBackendStorageAccount }} --resource-group ${{ env.tfBackendRg }} --query "[0].value" --output tsv)
          az storage container create --name ${{ env.tfBackendContainer }} --public-access off --account-name ${{ env.tfBackendStorageAccount }} --account-key ${{ env.tfBackendStorageKey }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "0.14.x"

      - name: Terraform Init
        run: terraform init -backend-config="resource_group_name=${{ env.resourceGroupName }}" -backend-config="app_service_name=${{ env.appServiceName }}" -backend-config="app_service_plan=${{ env.appServicePlanName }}" -backend-config="storage_account_name=${{ env.tfBackendStorageAccount }}" -backend-config="container_name=${{ env.tfBackendContainer }}" -backend-config="key=terraform.tfstate"
        working-directory: $(System.DefaultWorkingDirectory)/infra/terraform

      - name: Terraform Plan
        run: terraform plan -var="resource_group_name=${{ env.resourceGroupName }}" -var="app_service_name=${{ env.appServiceName }}" -var="app_service_plan=${{ env.appServicePlanName }}"
        working-directory: $(System.DefaultWorkingDirectory)/infra/terraform

      - name: Terraform Apply
        run: terraform apply -var="resource_group_name=${{ env.resourceGroupName }}" -var="app_service_name=${{ env.appServiceName }}" -var="app_service_plan=${{ env.appServicePlanName }}"
        working-directory: $(System.DefaultWorkingDirectory)/infra/terraform
